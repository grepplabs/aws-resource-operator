apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    controller-tools.k8s.io: "1.0"
  name: s3buckets.aws.grepplabs.com
spec:
  group: aws.grepplabs.com
  names:
    kind: S3Bucket
    plural: s3buckets
  scope: Namespaced
  validation:
    openAPIV3Schema:
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          properties:
            acl:
              description: The canned ACL to apply. Defaults to "private"
              enum:
              - private
              - public-read
              - public-read-write
              - aws-exec-read
              - authenticated-read
              - bucket-owner-read
              - bucket-owner-full-control
              - log-delivery-write
              type: string
            bucket:
              description: The name of the bucket
              type: string
            corsConfiguration:
              description: The Cross-origin resource sharing (CORS)
              properties:
                corsRules:
                  description: CORS rules
                  items:
                    properties:
                      allowedHeaders:
                        description: Specifies which headers are allowed in a pre-flight
                          OPTIONS request.
                        items:
                          type: string
                        type: array
                      allowedMethods:
                        description: Identifies HTTP methods that the domain/origin
                          specified in the rule is allowed to execute.
                        items:
                          enum:
                          - GET
                          - PUT
                          - POST
                          - DELETE
                          - HEAD
                          type: string
                        minItems: 1
                        type: array
                      allowedOrigins:
                        description: One or more origins you want customers to be
                          able to access the bucket from.
                        items:
                          type: string
                        minItems: 1
                        type: array
                      exposeHeaders:
                        description: One or more headers in the response that you
                          want customers to be able to access from their applications
                          (for example, from a JavaScript XMLHttpRequest object).
                        items:
                          type: string
                        type: array
                      maxAgeSeconds:
                        description: The time in seconds that your browser is to cache
                          the preflight response for the specified resource.
                        format: int64
                        type: integer
                    required:
                    - allowedMethods
                    - allowedOrigins
                    type: object
                  type: array
              required:
              - corsRules
              type: object
            deleteStrategy:
              description: The bucket delete strategy. Defaults to "Delete"
              enum:
              - Delete
              - Skip
              - Force
              type: string
            lifecycle:
              description: The lifecycle configuration
              properties:
                lifecycleRules:
                  description: CORS rules
                  items:
                    properties:
                      abortIncompleteMultipartUpload:
                        description: Specifies the days since the initiation of an
                          Incomplete Multipart Upload that Lifecycle will wait before
                          permanently removing all parts of the upload.
                        properties:
                          daysAfterInitiation:
                            description: Indicates the number of days that must pass
                              since initiation for Lifecycle to abort an Incomplete
                              Multipart Upload.
                            format: int64
                            minimum: 1
                            type: integer
                        required:
                        - daysAfterInitiation
                        type: object
                      enabled:
                        description: Enable lifecycle rule.
                        type: boolean
                      expiration:
                        description: Specifies when current object versions expire.
                        properties:
                          date:
                            description: Indicates at what date the object is to be
                              moved or deleted. Should be in GMT ISO 8601 Format.
                            type: string
                          days:
                            description: Indicates the lifetime, in days, of the objects
                              that are subject to the rule. The value must be a non-zero
                              positive integer.
                            format: int64
                            minimum: 1
                            type: integer
                          expiredObjectDeleteMarker:
                            description: Indicates whether Amazon S3 will remove a
                              delete marker with no noncurrent versions. If set to
                              true, the delete marker will be expired; if set to false
                              the policy takes no action. This cannot be specified
                              with Days or Date in a Lifecycle Expiration Policy.
                            type: boolean
                        type: object
                      id:
                        description: Unique identifier for the rule.
                        maxLength: 255
                        minLength: 1
                        type: string
                      noncurrentVersionExpiration:
                        description: Specifies when noncurrent object versions expire.
                          Upon expiration, Amazon S3 permanently deletes the noncurrent
                          object versions. You set this lifecycle configuration action
                          on a bucket that has versioning enabled (or suspended) to
                          request that Amazon S3 delete noncurrent object versions
                          at a specific period in the object's lifetime.
                        properties:
                          days:
                            description: Specifies the number of days an object is
                              noncurrent before Amazon S3 can perform the associated
                              action.
                            format: int64
                            minimum: 1
                            type: integer
                        required:
                        - days
                        type: object
                      noncurrentVersionTransition:
                        description: Container for the transition rule that describes
                          when noncurrent objects transition to the STANDARD_IA, ONEZONE_IA,
                          INTELLIGENT_TIERING or GLACIER storage class. If your bucket
                          is versioning-enabled (or versioning is suspended), you
                          can set this action to request that Amazon S3 transition
                          noncurrent object versions to the STANDARD_IA, ONEZONE_IA,
                          INTELLIGENT_TIERING or GLACIER storage class at a specific
                          period in the object's lifetime.
                        properties:
                          days:
                            description: Indicates the lifetime, in days, of the objects
                              that are subject to the rule. The value must be a non-zero
                              positive integer.
                            format: int64
                            minimum: 1
                            type: integer
                          storageClass:
                            description: The class of storage used to store the object.
                            enum:
                            - GLACIER
                            - STANDARD_IA
                            - ONEZONE_IA
                            - INTELLIGENT_TIERING
                            type: string
                        required:
                        - days
                        - storageClass
                        type: object
                      prefix:
                        description: Prefix identifying one or more objects to which
                          the rule applies.
                        type: string
                      transition:
                        description: Lifecycle configuration to tell Amazon S3 to
                          transition current objects to another Amazon S3 storage
                          class.
                        properties:
                          date:
                            description: Indicates at what date the object is to be
                              moved or deleted. Should be in GMT ISO 8601 Format.
                            type: string
                          days:
                            description: Indicates the lifetime, in days, of the objects
                              that are subject to the rule. The value must be a non-zero
                              positive integer.
                            format: int64
                            minimum: 1
                            type: integer
                          storageClass:
                            description: The class of storage used to store the object.
                            enum:
                            - GLACIER
                            - STANDARD_IA
                            - ONEZONE_IA
                            - INTELLIGENT_TIERING
                            type: string
                        required:
                        - days
                        - storageClass
                        type: object
                    required:
                    - id
                    - enabled
                    type: object
                  type: array
              required:
              - lifecycleRules
              type: object
            logging:
              description: The server access logging provides detailed records for
                the requests that are made to a bucket
              properties:
                targetBucket:
                  description: Specifies the bucket where you want Amazon S3 to store
                    server access logs. You can have your logs delivered to any bucket
                    that you own, including the same bucket that is being logged.
                    You can also configure multiple buckets to deliver their logs
                    to the same target bucket. In this case you should choose a different
                    TargetPrefix for each source bucket so that the delivered log
                    files can be distinguished by key.
                  type: string
                targetPrefix:
                  description: A prefix for Amazon S3 to assign to all log object
                    keys.
                  type: string
              required:
              - targetBucket
              type: object
            ownershipStrategy:
              description: The bucket ownership strategy. Defaults to "Created"
              enum:
              - Created
              - Acquire
              type: string
            policy:
              description: A valid bucket policy JSON document
              type: string
            region:
              description: The region to use. Overrides config/env settings
              type: string
            serverSideEncryptionConfiguration:
              description: A server-side encryption configuration
              properties:
                rule:
                  description: Container for information about a particular server-side
                    encryption configuration rule.
                  properties:
                    applyServerSideEncryptionByDefault:
                      description: Describes the default server-side encryption to
                        apply to new objects in the bucket. If Put Object request
                        does not specify any server-side encryption, this default
                        encryption will be applied.
                      properties:
                        kmsMasterKeyID:
                          description: KMS master key ID to use for the default encryption.
                            This parameter is allowed if SSEAlgorithm is aws:kms.
                          type: string
                        sseAlgorithm:
                          description: Server-side encryption algorithm to use for
                            the default encryption. SSEAlgorithm is a required field.
                          enum:
                          - AES256
                          - aws:kms
                          type: string
                      required:
                      - sseAlgorithm
                      type: object
                  required:
                  - applyServerSideEncryptionByDefault
                  type: object
              required:
              - rule
              type: object
            tags:
              description: A mapping of tags to assign to the bucket
              type: object
            versioning:
              description: The bucket versioning state
              properties:
                enabled:
                  description: Enable versioning. Once you version-enable a bucket,
                    it can never return to an unversioned state. You can, however,
                    suspend versioning on that bucket
                  type: boolean
              required:
              - enabled
              type: object
            website:
              description: The static website hosting
              properties:
                endpoint:
                  description: This endpoint is used as a website address. Use this
                    bucket to host a website
                  properties:
                    errorDocument:
                      description: This is returned when an error occures. An absolute
                        path to the document to return in case of a 4XX error.
                      type: string
                    indexDocument:
                      description: This endpoint is used as a website address. Amazon
                        S3 returns this index document when requests are made to the
                        root domain or any of the subfolders.
                      type: string
                    routingRules:
                      description: A json array containing routing rules describing
                        redirect behavior and when redirects are applied.
                      type: string
                  required:
                  - indexDocument
                  type: object
                redirect:
                  description: Redirect requests to bucket or target domain
                  properties:
                    hostName:
                      description: Name of the host where requests will be redirected,
                        target bucket or domain
                      type: string
                    protocol:
                      description: Protocol to use (http, https) when redirecting
                        requests. The default is the protocol that is used in the
                        original request.
                      enum:
                      - http
                      - https
                      type: string
                  required:
                  - hostName
                  type: object
              type: object
          required:
          - bucket
          type: object
        status:
          properties:
            acl:
              description: The canned ACL
              type: string
            arn:
              description: The ARN of the S3 bucket
              type: string
            locationConstraint:
              description: The location constraint of S3 bucket
              type: string
          type: object
  version: v1beta1
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
